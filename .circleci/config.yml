aliases:
  ### restore caches
  - &restore_mix_cache
    keys:
      - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
      - v1-mix-cache-{{ .Branch }}
      - v1-mix-cache

  - &restore_build_cache
    keys:
      - v1-build-cache-{{ .Branch }}
      - v1-build-cache

  - &restore_plt_cache
    keys:
      - v1-dialyzer-plt-cache

  ### save caches
  - &save_mix_cache_checksum
    key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
    paths:
      - deps
      - ~/.mix

  - &save_mix_cache_branch
    key: v1-mix-cache-{{ .Branch }}
    paths:
      - deps
      - ~/.mix

  - &save_mix_cache_fallback
      key: v1-mix-cache
      paths:
      - deps
      - ~/.mix

  - &save_build_cache_branch
    key: v1-build-cache-{{ .Branch }}
    paths: _build

  - &save_build_cache_fallback
    key: v1-build-cache
    paths: _build

  - &save_plt_cache
    key: v1-dialyzer-plt-cache
    paths: _plts

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/elixir:1.9.0
      environment:
          MIX_ENV: test

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache: *restore_mix_cache
      - restore_cache: *restore_build_cache

      # get deps and compile
      - run: mix deps.get
      - run: mix compile

      - save_cache: *save_mix_cache_checksum
      - save_cache: *save_mix_cache_branch
      - save_cache: *save_mix_cache_fallback
      - save_cache: *save_build_cache_branch
      - save_cache: *save_build_cache_fallback

  test:
    <<: *defaults
    steps:
      - checkout
      - run: sudo apt-get -y install inotify-tools

      - restore_cache: *restore_mix_cache
      - restore_cache: *restore_build_cache

      # run test coverage
      - run: mix coveralls.html

      - store_artifacts:
          path: cover
          destination: coverage_results

  docs:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_mix_cache
      - restore_cache: *restore_build_cache

      # generate docs
      - run: mix docs

      - store_artifacts:
          path: docs
          destination: documentation

  typespecs:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_mix_cache
      - restore_cache: *restore_build_cache
      - restore_cache: *restore_plt_cache

      # run typespecs
      - run: mix dialyzer --halt-exit-status

      - save_cache: *save_plt_cache

  format:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_mix_cache

      # check formatting
      - run: mix format --check-formatted

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - format:
          requires:
            - build
      - docs:
          requires:
            - build
      - typespecs:
          requires:
            - build
      - test:
          requires:
            - build
